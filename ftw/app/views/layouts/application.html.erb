<!DOCTYPE html>
<html>
  <head>
    <%= csrf_meta_tags %>

    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
    <meta charset="UTF-8">
    <title>Funny Time Waster</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-visibility/1.0.11/jquery-visibility.js"></script>
    <style>
        body{
            padding: 0;
            margin: 0;
            background: -webkit-gradient(linear, left top, left bottom, from(white), to(#d5fff9)) fixed;
        }
        #containsfloats{
            width: 100%;
            height: 100%;
            margin: 0;
            padding: 0;
            position: fixed;
        }
        .content{
            position: absolute;
            height: auto;
            width: 300px;
            background: lightgreen;
            top: 100%;
            margin: 0;
            padding: 0;
            border: 0;
        }
        .thumbnail{
          .caption h3{
            margin: 0 0 14px;
            padding: 0;
            font-size: 1.5em;

            &.title-post{
              text-overflow: ellipsis;
              overflow: hidden;
              width: 100%;
              white-space: nowrap;
            }

            a{
              color: #000;
            }
          }

          video{
            width: 100%;
            max-height: 460px;
          }
        }


    </style>
  </head>

  <body>

    <div id="containsfloats">
        <%= yield %>
    </div>

    <script>
        //Minor bug: goes faster upon resuming tab
        $(document).ready(function(){
            var elems = document.getElementsByClassName("content");
            var elemTopCoords = [];
            function loop(elem, id) {
                //set position before animation
                $(elem).css({
                    top: $("#containsfloats").height(),
                    left: ($(window).width() - $(elem).width()) * Math.random(),
                });
                elemTopCoords[id] = $(elem).offset().top;
                if (collide(elem, id)){
                    //move it out of the way first before trying to display again
                    $(elem).css({
                        left: -$(elem).width() * 2,
                    })
                    setTimeout(function() {
                        loop(elem, id);
                    }, 2000)
                }
                else {
                    //animate
                    $(elem).stop(true, true).animate({top: "-=" + ($("#containsfloats").height() + $(elem).height())}, {
                        duration:($(window).height()+$(elem).height())*5,
                        easing: "linear",
                        step: function(){
                            //records value
                            elemTopCoords[id] = $(elem).offset().top;
                        },
                        complete: function(){
                            //records value
                            elemTopCoords[id] = $(elem).offset().top;
                            //delay respawn so every arrangement is new
                            setTimeout(function () {
                                loop(elem, id);
                            }, Math.random() * 2000 + 1000)
                        }
                    });


                }
            }

            function collide(elem, id){
                if ($(elem).offset().left == 0) return false;
                for (var i = 0; i < elems.length; i ++){
                    if (elem !== elems[i]){
                        //adds padding for minimum space between divs
                        var padding = 60;
                        var x1 = $(elem).offset().left - padding/2;
                        var y1 = elemTopCoords[id] - padding/2;
                        var h1 = $(elem).outerHeight(true);
                        var w1 = $(elem).outerWidth(true);
                        var yEnd1 = y1 + h1 + padding/2;
                        var xEnd1 = x1 + w1 + padding/2;
                        var x2 = $(elems[i]).offset().left;
                        var y2 = elemTopCoords[i];
                        var h2 = $(elems[i]).outerHeight(true);
                        var w2 = $(elems[i]).outerWidth(true);
                        var yEnd2 = y2 + h2;
                        var xEnd2 = x2 + w2;

                        if (((x1 <= x2 && x2 <= xEnd1) || (x1 <= xEnd2 && xEnd2 <= xEnd1)) &&
                            ((y1 <= y2 && y2 <= yEnd1) || (y1 <= yEnd2 && yEnd2 <= yEnd1))){
                            return true;
                        }
                    }
                }
                return false;
            }



            function initiate() {
                loop(elems[0], 0);
                (function iterate(i) {
                    setTimeout(function () {
                        loop(elems[i], i);
                        if (--i) iterate(i);
                    }, Math.random() * 2000 + 1000)
                })(elems.length - 1);
            }


            //Pause/resume animation on page visibility
            $(document).on({
                'hide': function() {
                    console.log("Paused");
                    for (var i = 0; i < elems.length; i ++){
                        $(elems[i]).pause();
                    }
                },
                'show': function() {
                    for (var i = 0; i < elems.length; i ++){
                        $(elems[i]).resume();
                    }
                }
            });

            //Pause.js
            (function() {
                var $ = jQuery,
                    pauseId = 'jQuery.pause',
                    uuid = 1,
                    oldAnimate = $.fn.animate,
                    anims = {};

                function now() { return new Date().getTime(); }

                $.fn.animate = function(prop, speed, easing, callback) {
                    var optall = $.speed(speed, easing, callback);
                    optall.complete = optall.old; // unwrap callback
                    return this.each(function() {
                        // check pauseId
                        if (! this[pauseId])
                            this[pauseId] = uuid++;
                        // start animation
                        var opt = $.extend({}, optall);
                        oldAnimate.apply($(this), [prop, $.extend({}, opt)]);
                        // store data
                        anims[this[pauseId]] = {
                            run: true,
                            prop: prop,
                            opt: opt,
                            start: now(),
                            done: 0
                        };
                    });
                };

                $.fn.pause = function() {
                    return this.each(function() {
                        // check pauseId
                        if (! this[pauseId])
                            this[pauseId] = uuid++;
                        // fetch data
                        var data = anims[this[pauseId]];
                        if (data && data.run) {
                            data.done += now() - data.start;
                            if (data.done > data.opt.duration) {
                                // remove stale entry
                                delete anims[this[pauseId]];
                            } else {
                                // pause animation
                                $(this).stop();
                                data.run = false;
                            }
                        }
                    });
                };

                $.fn.resume = function() {
                    return this.each(function() {
                        // check pauseId
                        if (! this[pauseId])
                            this[pauseId] = uuid++;
                        // fetch data
                        var data = anims[this[pauseId]];
                        if (data && ! data.run) {
                            // resume animation
                            data.opt.duration -= data.done;
                            data.done = 0;
                            data.run = true;
                            data.start = now();
                            oldAnimate.apply($(this), [data.prop, $.extend({}, data.opt)]);
                        }
                    });
                };
            })();

            initiate();
        })

    </script>
  </body>
</html>
