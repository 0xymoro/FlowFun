<!DOCTYPE html>
<html>
  <head>
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-90323378-1', 'auto');
      ga('send', 'pageview');

    </script>

  
    <%= csrf_meta_tags %>

    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
    <meta charset="UTF-8">
    <title>FlowFun</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-visibility/1.0.11/jquery-visibility.js"></script>
    <style>
        body{
            padding: 0;
            margin: 0;
            background: -webkit-gradient(linear, left top, left bottom, from(white), to(#d5fff9)) fixed;
        }

        #containsfloats{
            position: fixed;
            z-index: -1;
            top: 0;
        }
        .content{
            position: absolute;
            height: auto;
            width: 350px;
            border-radius: 20px;
            top: 100%;
            margin: 0;
            padding: 0px 20px 20px 20px;
            border: 0;
        }
        .thumbnail{
          .caption h3{
            margin: 0 0 14px;
            padding: 0;
            font-size: 1.5em;

            &.title-post{
              text-overflow: ellipsis;
              overflow: hidden;
              width: 100%;
              white-space: nowrap;
            }

            a{
              color: #000;
            }
          }

          video{
            width: 100%;
            max-height: 460px;
          }
        }

        
        #info{
            box-sizing: border-box;
            z-index: 1;
            display: none;
            position: fixed;
            right: 3px;
            bottom: 25px;
            background: white;
            box-shadow: 0 0 6px 6px lightblue;
            border-radius: 10px;
            padding: 7px 7px 0 7px;
            vertical-align: bottom;
            font-family: Comic Sans MS;
            line-height: 20px;
        }
        #infoButton{
            z-index: 1;
            border-radius: 5px;
            box-shadow: 2px 2px 1px #eeeeee;
            background: lightblue;
            border: 1px solid lightgray;
            position: fixed;
            bottom: 0;
            right: 0;
            font-family: Serif;
            font-size: 1em;
        }
        #infoButton:focus {
            outline: 0;
        }

    </style>
  </head>

  <body>

    <%= audio_tag "background.mp3", class: "audio-play" %>

    <div id="info">
        <p>FlowFun: an UI Experiment<br/>
        Built by Jerry Meng and King Alandy Dy<br/>
        Content courtesy of 9gag</p>
    </div>
    <button id="infoButton">?</button>

    
    <div id="containsfloats">
        <%= yield %>
    </div>

    <script>
        const showSpeed = 17;
        const shadowHeight = 20;
        var apiLoadMore;
        var elems;
        var elemTopCoords = [];
        var completedCount = 0;
        var paused = false;
        function loop(elem) {
            var r = Math.floor(Math.random()*128)+128;
            var g = Math.floor(Math.random()*128)+128;
            var b = Math.floor(Math.random()*128)+128;
            //set position before animation
            $(elem).css({
                top: $(window).height() + 2*shadowHeight,
                left: ($(window).width() - $(elem).outerWidth(true) - 2*shadowHeight) * Math.random() + shadowHeight
            });

            //log the index into array
            elemTopCoords[myIndexOf(elem)] = $(elem).offset().top;

            if (collide(elem) || paused){
                //move it out of the way first before trying to display again
                $(elem).css({
                    left: -$(elem).width() * 2,
                })
                setTimeout(function() {
                    loop(elem);
                }, Math.random() * 200)
            }
            else {
                //add box shadow
                $(elem).css({
                    'background': 'rgba('+r+', '+g+', '+b+', 0.5)',
                    '-webkit-box-shadow': '0 0 '+shadowHeight+'px '+shadowHeight+'px rgba('+r+', '+g+', '+b+', 0.5)',
                    'box-shadow': '0 0 '+shadowHeight+'px '+shadowHeight+'px rgba('+r+', '+g+', '+b+', 0.5)',
                });

                //animate
                $(elem).stop(true, true).animate({top: -($(elem).outerHeight(true) + 4*shadowHeight)}, {
                    duration:($(window).height()+$(elem).height())*showSpeed,
                    easing: "linear",
                    step: function(){
                        //records value
                        elemTopCoords[myIndexOf(elem)] = $(elem).offset().top;
                    },
                    complete: function(){          
                        //records value
                        elemTopCoords[myIndexOf(elem)] = $(elem).offset().top;
                        //move out of the way
                        $(elem).css({
                            left: -$(elem).width() * 2,
                        })

                        completedCount ++;
                        //loadMore by multiples of 10 (offset by 1)
                        if (completedCount % 10 == 1){
                            apiLoadMore.loadMore();
                        }
                        $(elem).remove();
                    }
                });
            }
        }

        //gets index
        function myIndexOf(elem) {    
            for (var i = 0; i < elems.length; i++) {
                if ($(elems[i]).is($(elem))) {
                    return i;
                }
            }
            return -1;
        }

        //from Jason Arnello on TeamTreehouse
        function objToArray (obj) {
            var values = [];
            obj.each (function() {
                values.push($(this));
            });
            return values;
        }


        //adding new divs to existing moving ones on loadMore
        //note: 9gag loadmore always gets 10 more posts
        function moveNewDivs(){
            elems = objToArray($(".content"));

            //populate initial top coordinate array
            for (var index = elems.length - 10; index < elems.length-1; index++){
                elemTopCoords[index] = $(window).height();
            }

            //loop through new post divs
            (function iterate(i) {
                setTimeout(function () {
                    loop(elems[i]);
                    if (i < elems.length-1) iterate(i+1);
                }, Math.random() * 100)
            })(elems.length - 10);

        }


        function collide(elem){
            //adds padding for minimum space between divs
            var padding = 60 + 4*shadowHeight;
            var x1 = $(elem).offset().left - padding/2;
            var y1 = elemTopCoords[myIndexOf(elem)] - padding/2;
            var h1 = $(elem).outerHeight(true);
            var w1 = $(elem).outerWidth(true);
            var yEnd1 = y1 + h1 + padding;
            var xEnd1 = x1 + w1 + padding;
            for (var i = 0; i < elems.length; i ++){
                if (myIndexOf(elem) != i){
                    var x2 = $(elems[i]).offset().left;
                    var y2 = elemTopCoords[i];
                    var h2 = $(elems[i]).outerHeight(true);
                    var w2 = $(elems[i]).outerWidth(true);
                    var yEnd2 = y2 + h2;
                    var xEnd2 = x2 + w2;
                    if (x1 <= xEnd2 && xEnd1 >= x2 && 
                        y1 <= yEnd2 && yEnd1 >= y2){
                        console.log("Collided");
                        return true;
                    }
                }
                
            }
            return false;
        }

        function pauseAll(){
            for (var i = 0; i < elems.length; i ++){
                $(elems[i]).pause();
            }
            paused = true;
        }

        function resumeAll(){
            for (var i = 0; i < elems.length; i ++){
                $(elems[i]).resume();
            }
            paused = false;
        }

        //Pause/resume animation on page visibility
        $(document).on({
            'hide': function() {
                if (!paused){
                    pauseAll();
                }
            },
            'show': function() {
                if (paused){
                    resumeAll();
                }
            }
        });

        //if clicked, pause/resume
        $("#containsfloats").click(function(){
            if (paused){
                resumeAll();
            }
            else{
                pauseAll();
            }
        });

        //Pause.js from https://github.com/tobia/Pause                                   
        (function() {
            var $ = jQuery,
                pauseId = 'jQuery.pause',
                uuid = 1,
                oldAnimate = $.fn.animate,
                anims = {};

            function now() { return new Date().getTime(); }

            $.fn.animate = function(prop, speed, easing, callback) {
                var optall = $.speed(speed, easing, callback);
                optall.complete = optall.old; // unwrap callback
                return this.each(function() {
                    // check pauseId
                    if (! this[pauseId])
                        this[pauseId] = uuid++;
                    // start animation
                    var opt = $.extend({}, optall);
                    oldAnimate.apply($(this), [prop, $.extend({}, opt)]);
                    // store data
                    anims[this[pauseId]] = {
                        run: true,
                        prop: prop,
                        opt: opt,
                        start: now(),
                        done: 0
                    };
                });
            };

            $.fn.pause = function() {
                return this.each(function() {
                    // check pauseId
                    if (! this[pauseId])
                        this[pauseId] = uuid++;
                    // fetch data
                    var data = anims[this[pauseId]];
                    if (data && data.run) {
                        data.done = now() - data.start;
                        if (data.done > data.opt.duration) {
                            // remove stale entry
                            delete anims[this[pauseId]];
                        } else {
                            // pause animation
                            $(this).stop();
                            data.run = false;
                        }
                    }
                });
            };

            $.fn.resume = function() {
                return this.each(function() {
                    // check pauseId
                    if (! this[pauseId])
                        this[pauseId] = uuid++;
                    // fetch data
                    var data = anims[this[pauseId]];
                    if (data && ! data.run) {
                        // resume animation
                        data.opt.duration -= data.done;
                        data.done = 0;
                        data.run = true;
                        data.start = now();
                        oldAnimate.apply($(this), [data.prop, $.extend({}, data.opt)]);
                    }
                });
            };
        })();

        //toggle info box visibility
        $("#infoButton").click(function(){
            $("#info").toggle(40);
        });

        window.onload = function(){
            //initiate
            moveNewDivs();
            //play music
            $(".audio-play")[0].play();
        }


    </script>
  </body>
</html>
